{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Madlib",
  "patterns": [
    {
      "include": "#where"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#function-defs"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#types"
    },
    {
      "include": "#access"
    },
    {
      "include": "#variable-decls"
    },
    {
      "include": "#function-calls"
    },
    {
      "include": "#jscode"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.madlib",
          "match": "\\b(if|else|where|is|import|export|from)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.madlib",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.madlib",
          "match": "\\\\."
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.boolean.madlib",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.numeric.decimal.madlib",
          "match": "\\b([0-9]|\\.)+\\b"
        }
      ]
    },
    "variable-decls": {
      "patterns": [
        {
          "match": "([a-zA-Z]+)[ ]*=(.*)",
          "captures": {
            "1": { "name": "variable.other.constant.madlib" },
            "2": {
              "patterns": [
                { "include": "#function-calls" },
                { "include": "#function-defs" },
                { "include": "#strings" },
                { "include": "#constants" },
                { "include": "#types" },
                { "include": "#access" },
                { "include": "#where" },
                { "include": "#jscode" }
              ]
            }
          }
        }
      ]
    },
    "function-calls": {
      "patterns": [
        {
          "match": "([a-zA-Z]+[a-zA-Z0-9]*)\\((.*)",
          "captures": {
            "1": {
              "patterns": [
                { "match": "[a-z]+[A-Za-z0-9]*", "name": "entity.name.function.madlib" },
                {
                  "match": "\\b([A-Z]+[A-Za-z0-9]*)\\b",
                  "captures": {
                    "1": { "name": "constant.other.madlib" }
                  }
                }
              ]
            },
            "2": {
              "patterns": [
                { "include": "#function-calls" },
                { "include": "#function-defs" },
                { "include": "#strings" },
                { "include": "#constants" },
                { "include": "#types" },
                { "include": "#access" },
                { "include": "#where" },
                { "include": "#jscode" }
              ]
            }
          }
        }
      ]
    },
    "function-defs": {
      "patterns": [
        {
          "match": "\\(([a-zA-Z,\\s]+)\\)\\s(=>)\\s(.*)",
          "captures": {
            "1": {
              "name": "variable.parameter.madlib",
              "patterns": [
                {
                  "name": "constant.character.escape.madlib",
                  "match": "\\,"
                }
              ]
            },
            "2": { "name": "keyword.operator.double-colon.madlib" },
            "3": {
              "patterns": [
                { "include": "#where" },
                { "include": "#function-calls" },
                { "include": "#function-defs" },
                { "include": "#access" },
                { "include": "#constants" },
                { "include": "#jscode" }
              ]
            }
          }
        },
        {
          "match": "([a-zA-Z]+)[ ]*=[ ]*\\(([a-zA-Z,\\s]+)\\)\\s(=>)\\s(.*)",
          "captures": {
            "1": { "name": "entity.name.function.madlib" },
            "2": {
              "name": "variable.parameter.madlib",
              "patterns": [
                {
                  "name": "constant.character.escape.madlib",
                  "match": "\\,"
                }
              ]
            },
            "3": { "name": "keyword.operator.double-colon.madlib" },
            "4": {
              "patterns": [
                { "include": "#where" },
                { "include": "#function-calls" },
                { "include": "#access" },
                { "include": "#constants" },
                { "include": "#jscode" }
              ]
            }
          }
        },
        {
          "match": "([a-zA-Z]+)\\s*(::)\\s(.*)",
          "captures": {
            "1": { "name": "entity.name.function.madlib" },
            "2": { "name": "keyword.operator.double-colon.madlib" },
            "3": {
              "patterns": [
                { "name": "storage.type.madlib", "match": "[A-Z]+[A-Za-z0-9]*" },
                { "name": "keyword.operator.arrow.madlib", "match": "->" }
              ]
            }
          },
          "name": "meta.function.type-declaration.madlib"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "match": "->",
          "name": "keyword.operator.arrow.madlib"
        },
        {
          "match": ":",
          "name": "keyword.operator.arrow.madlib"
        },
        {
          "match": "<",
          "name": "keyword.operator.arrow.madlib"
        },
        {
          "match": ">",
          "name": "keyword.operator.arrow.madlib"
        },
        {
          "match": "\\|>",
          "name": "keyword.operator.arrow.madlib"
        },
        {
          "match": "::",
          "name": "keyword.operator.double-colon.madlib"
        },
        {
          "match": "=\\s*([A-Z]+[a-zA-Z0-9]*)",
          "captures": { "1": { "name": "constant.other.madlib" } }
        },
        {
          "match": "\\|\\s*([A-Z]+[a-zA-Z0-9]*)",
          "captures": { "1": { "name": "constant.other.madlib" } }
        },
        {
          "match": "(data|alias)\\s*([A-Z]+[A-Za-z0-9]*)\\s*.*\\s*=\\s*(.*)",
          "captures": {
            "1": { "name": "keyword.control.madlib" },
            "2": { "name": "storage.type.madlib" },
            "3": {
              "patterns": [
                { "include": "#types" },
                {
                  "name": "constant.other.madlib",
                  "match": "[A-Z]+[A-Za-z0-9]*"
                },
                {
                  "name": "keyword.operator.pipe.madlib",
                  "match": "\\|"
                }
              ]
            }
          },
          "patterns": [
            {
              "match": "([A-Z]+[A-Za-z0-9]*)",
              "captures": {
                "1": { "name": "constant.other.madlib" }
              }
            }
          ]
        },
        {
          "match": "(data)\\s*([A-Z]+[A-Za-z0-9]*).*",
          "captures": {
            "1": { "name": "keyword.control.madlib" },
            "2": { "name": "storage.type.madlib" }
          },
          "patterns": [
            {
              "match": "([A-Z]+[A-Za-z0-9]*)",
              "captures": {
                "1": { "name": "constant.other.madlib" }
              }
            }
          ]
        }
      ]
    },
    "if": {
      "patterns": [
        { "match": "if", "name": "keyword.control.madlib" },
        { "match": "else", "name": "keyword.control.madlib" }
      ]
    },
    "where": {
      "patterns": [
        {
          "match": "where",
          "name": "keyword.control.madlib"
        },
        {
          "match": "(where)\\s*\\((.*)\\)\\s*",
          "captures": {
            "1": { "name": "keyword.control.madlib" },
            "2": { "patterns": [
              { "include": "#constants" },
              { "include": "#types" },
              { "include": "#function-calls" },
              { "include": "#strings" },
              { "include": "#if" },
              { "include": "#where" }
              ] }
          }
        },
        {
          "match": "\\s*(\\bis\\b)\\s*(.*)",
          "captures": {
            "1": { "name": "keyword.control.madlib" },
            "2": {
              "patterns": [
                {
                  "match": "([a-z]+[a-zA-Z0-9]*)\\((.*)\\)",
                  "captures": {
                    "1": {
                      "name": "entity.name.function.madlib"
                    },
                    "2": {
                      "patterns": [
                        {
                          "include": "#access"
                        },
                        { "include": "#where" },
                        { "include": "#strings" },
                        { "include": "#if" },
                        { "include": "#function-defs" },
                        { "include": "#function-calls" },
                        { "include": "#types" }
                      ]
                    }
                  }
                },
                { "include": "#function-calls" },
                { "include": "#constants" },
                { "include": "#access" },
                { "include": "#types" },
                { "include": "#if" },
                { "include": "#strings" },
                {
                  "begin": "[A-Z]+",
                  "match": "\\b([A-Z]+[A-Za-z0-9]*)\\b",
                  "captures": {
                    "1": { "name": "constant.other.madlib" }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "access": {
      "patterns": [
        {
          "match": "([.*].*)",
          "patterns": [
            { "include": "#function-calls" },
            { "include": "#function-defs" },
            { "include": "#strings" },
            { "include": "#constants" },
            { "include": "#types" },
            { "include": "#access" },
            { "include": "#where" },
            { "include": "#jscode" }
          ]
        },
        {
          "match": "([A-Z]+[A-Za-z0-9]*)\\.([a-z]+[a-zA-Z0-9]*\\(?.*\\)?)",
          "captures": {
            "1": { "name": "variable.other.constant.madlib" },
            "2": {
              "patterns": [
                { "include": "#where" },
                { "include": "#strings" },
                { "include": "#if" },
                { "include": "#types" },
                { "include": "#function-calls" },
                { "include": "#function-defs" },
                { "match": "\\b[A-Z]+[A-Za-z0-9]*\\b", "name": "variable.other.constant.madlib" }
              ]
            }
          }
        },
        {
          "match": "([A-Z]+[A-Za-z0-9]*)\\.([A-Z]+[a-zA-z0-9]*)",
          "captures": {
            "1": { "name": "variable.other.constant.madlib" },
            "2": {
              "patterns": [
                {
                  "match": "([a-z]+[a-zA-Z0-9]*)\\((.*)\\)",
                  "captures": {
                    "1": {
                      "name": "entity.name.function.madlib"
                    },
                    "2": {
                      "patterns": [
                        {
                          "include": "#access"
                        },
                        { "include": "#where" },
                        { "include": "#strings" },
                        { "include": "#if" },
                        { "include": "#function-defs" }
                      ]
                    }
                  }
                },
                { "match": "[A-Z]+[A-Za-z0-9]*\\b", "name": "storage.type.madlib" }
              ]
            }
          }
        },
        {
          "match": "([A-Z]+[A-Za-z0-9]*)\\.(.*)",
          "captures": {
            "2": {
              "patterns": [{ "include": "#where" }]
            }
          }
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "//.*",
          "name": "comment.line.double-slash.madlib"
        }
      ]
    },
    "jscode": {
      "patterns": [
        {
          "match": "(.*)#\\-(.*)\\-#(.*)",
          "captures": {
            "1": { "patterns": [{ "include": "source.mad" }] },
            "2": { "patterns": [{ "include": "source.js" }] },
            "3": { "patterns": [{ "include": "source.mad" }] }
          },
          "name": "meta.embedded.block.javascript"
        },
        {
          "begin": "(.*)#\\-",
          "end": "\\-#(.*)",
          "beginCaptures": {
            "1": { "patterns": [{ "include": "source.mad" }] },
            "2": { "patterns": [{ "include": "source.mad" }] }
          },
          "name": "meta.embedded.block.javascript",
          "patterns": [{ "include": "source.js" }]
        }
      ]
    }
  },
  "scopeName": "source.mad"
}
